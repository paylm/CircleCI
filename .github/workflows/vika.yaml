name: Vika deploy

# 参考： actions/using-workflows/events-that-trigger-workflows#repository_dispatch
#
# {
#  "event_type": "deploy",
#  "client_payload": {
#    "edition": vika,   产品： vika or apitable
#    "env": "integration" 环境
#    "app": "backend-server" 服务
#    "containerName": "backend-server" 容器名
#    "image": "docker.vikadata.com/vikadata/vika/backend-server:latest-alpha" 镜像
#    "replicas": 1
#  }
#}
#
#
on:
  repository_dispatch:
    types: [deploy]
jobs:
  deploy-vika:
    if: ${{ github.event.action == 'deploy' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: GIT commit and push all changed files
        env:
          CI_COMMIT_MESSAGE: Continuous Integration Build Artifacts
          CI_COMMIT_AUTHOR: Continuous Integration
        run: |
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "username@users.noreply.github.com"
          git stash
          git pull
          git checkout -b deploy-version origin/deploy-version
          date > .version
          mkdir -p ${{ github.event.client_payload.edition }}-${{ github.event.client_payload.env }}/${{ github.event.client_payload.app }}
          echo "${{ github.event.client_payload.image }}" > ${{ github.event.client_payload.edition }}-${{ github.event.client_payload.env }}/${{ github.event.client_payload.app }}.version
          git add *
          git commit -a -m "${{ env.CI_COMMIT_MESSAGE }}"
          git push
#      - name: deploy k8s
#        uses: wahyd4/kubectl-helm-action@master
#        env:
#          KUBE_CONFIG_DATA: ${{ secrets.KUBE_VIKA_CONFIG }}
#        with:
#          args: whoami && kubectl get pods && sh -x deploy.sh update-app ${{ github.event.client_payload.app }} ${{ github.event.client_payload.containerName }} ${{ github.event.client_payload.image }} ${{ github.event.client_payload.env }}

  deploy-apitable:
    runs-on: ubuntu-latest
    if: ${{ github.event_type == 'deploy' && github.event.client_payload.product == 'apitable' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
#      - name: deploy k8s
#        uses: wahyd4/kubectl-helm-action@master
#        env:
#          KUBE_CONFIG_DATA: ${{ secrets.KUBE_VIKA_CONFIG }}
#        with:
#          args: whoami && kubectl get pods

